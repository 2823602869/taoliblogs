import{_ as n,c as e,b as a,d as r,e as s,a as o,o as i,r as d}from"./app-CZypL58b.js";const p="/assets/2020042813353130-CCDX4MBk.jpg",g={},v={href:"https://www.runoob.com/java/java-variable-types.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.ataoli.cn/92.html",target:"_blank",rel:"noopener noreferrer"};function j(h,t){const l=d("ExternalLinkIcon");return i(),e("div",null,[t[5]||(t[5]=a("h4",{id:"_1-java常量与变量",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-java常量与变量"},[a("span",null,"1. java常量与变量")])],-1)),t[6]||(t[6]=a("p",null,"这里博主推荐一篇文章，是菜鸟教程里的一篇文章",-1)),a("p",null,[t[1]||(t[1]=r("链接地址：")),a("a",v,[t[0]||(t[0]=r("https://www.runoob.com/java/java-variable-types.html")),s(l)])]),t[7]||(t[7]=a("p",null,[a("strong",null,"常量："),r(" 表示的是在程序中不能修改的量")],-1)),t[8]||(t[8]=a("p",null,"**变量：**表示的是在程序中可以变化的量",-1)),t[9]||(t[9]=a("p",null,"Java语言支持的变量类型有：",-1)),t[10]||(t[10]=a("ul",null,[a("li",null,"类变量：独立于方法之外的变量，用 static 修饰。"),a("li",null,"实例变量：独立于方法之外的变量，不过没有 static 修饰。"),a("li",null,"局部变量：类的方法中的变量。")],-1)),a("p",null,[t[3]||(t[3]=r("常量主要包括 ")),a("a",u,[t[2]||(t[2]=a("strong",null,[a("em",null,"8种基本数据类型")],-1)),s(l)]),t[4]||(t[4]=r("（这里我就不一一列举，如果不知道可以点击超级链接查看）"))]),t[11]||(t[11]=o('<p>java语言中常量的类型有：</p><ul><li>整型常量</li><li>实例常量</li><li>字符型常量</li><li>布尔型常量</li></ul><p><strong>变量：</strong></p><p><img src="https://oss.ataoli.cn/uploads/2020/04/2020042812540552.jpg?x-oss-process=image/resize,m_fill,h_541,w_1024" alt=""></p><h4 id="_2-java转义字符" tabindex="-1"><a class="header-anchor" href="#_2-java转义字符"><span>2. java转义字符</span></a></h4><figure><table><thead><tr><th>转义字符</th><th>说明</th></tr></thead><tbody><tr><td>\\ddd</td><td>1~3 位八进制数所表示的字符</td></tr><tr><td>\\uxxxx</td><td>1~4 位十六进制数所表示的字符</td></tr><tr><td>\\&#39;</td><td>单引号字符</td></tr><tr><td>\\&quot;</td><td>双引号字符</td></tr><tr><td>\\\\</td><td>双斜杠字符</td></tr><tr><td>\\r</td><td>回车</td></tr><tr><td>\\n</td><td>换行</td></tr><tr><td>\\b</td><td>退格</td></tr><tr><td>\\t</td><td>横向跳格</td></tr></tbody></table><figcaption><p>Java语言支持一些特殊的转义字符序列。</p></figcaption></figure><h4 id="_3-java标识符" tabindex="-1"><a class="header-anchor" href="#_3-java标识符"><span>3. java标识符</span></a></h4><p><img src="https://oss.ataoli.cn/uploads/2020/04/2020042813052046.jpg?x-oss-process=image/resize,m_fill,h_547,w_1024" alt=""></p><h4 id="_4-java运算符" tabindex="-1"><a class="header-anchor" href="#_4-java运算符"><span>4. java运算符</span></a></h4><p>数据操作运算符的种类：</p><p><img src="'+p+'" alt=""></p><p>运算符的优先级：</p><p><img src="https://oss.ataoli.cn/uploads/2020/04/2020042813360412.jpg?x-oss-process=image/resize,m_fill,h_563,w_1024" alt=""></p><h4 id="_5-java修饰符" tabindex="-1"><a class="header-anchor" href="#_5-java修饰符"><span><strong>5. java修饰符</strong></span></a></h4><p>Java语言提供了很多修饰符，主要分为以下两类：</p><ul><li>访问修饰符</li><li>非访问修饰符</li></ul><p><strong>java访问修饰符：</strong></p><p>Java中，可以使用访问控制符来保护对类、变量、方法和构造方法的访问。Java 支持 4 种不同的访问权限。</p><ul><li><strong>default</strong> (即默认，什么也不写）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。</li><li><strong>private</strong> : 在同一类内可见。使用对象：变量、方法。 <strong>注意：不能修饰类（外部类）</strong></li><li><strong>public</strong> : 对所有类可见。使用对象：类、接口、变量、方法</li><li><strong>protected</strong> : 对同一包内的类和所有子类可见。使用对象：变量、方法。 <strong>注意：不能修饰类（外部类）</strong>。</li></ul><p><strong>java非访问修饰符</strong>：</p><p>为了实现一些其他的功能，Java 也提供了许多非访问修饰符。</p><p>static 修饰符，用来修饰类方法和类变量。</p><p>final 修饰符，用来修饰类、方法和变量，final 修饰的类不能够被继承，修饰的方法不能被继承类重新定义，修饰的变量为常量，是不可修改的。</p><p>abstract 修饰符，用来创建抽象类和抽象方法。</p><p>synchronized 和 volatile 修饰符，主要用于线程的编程。</p>',25))])}const f=n(g,[["render",j],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/docs/guide/Java/2020-04-28-javabiaoshifuyunsuanfujichangliangyubianliang/","title":"java标识符运算符及常量与变量","lang":"en-US","frontmatter":{"title":"java标识符运算符及常量与变量","date":"2020-04-28","categories":["java","blog"],"tags":["java","java基础","java学习","java学习框架"],"coverImage":"2020042512071165.jpg"},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"docs/guide/Java/2020-04-28-java标识符运算符及常量与变量/index.md"}');export{f as comp,b as data};
