import{_ as e,c as d,a as s,o as a}from"./app-D0tMrQXM.js";const n="/taoliblogs/assets/1661078823-image-BNGI1Sny.png",r="/taoliblogs/assets/1661078857-1661078852792-DaZkJtaP.png",i={};function l(o,t){return a(),d("div",null,t[0]||(t[0]=[s(`<h2 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h2><p>如果浏览器窗口的宽度为 768px 或更小时，把 body元素的背景颜色更改为“浅蓝色”：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token selector">body</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+n+'" alt=""></p><p>[^宽度大于768px 背景色为绿色]:</p><p><img src="'+r+`" alt=""></p><p>[^宽度大于768px 背景色为蓝色]:</p><h2 id="定义和用法" tabindex="-1"><a class="header-anchor" href="#定义和用法"><span>定义和用法</span></a></h2><p>@media 规则在媒体查询中用于为不同的媒体类型/设备应用不同的样式。</p><h2 id="css-语法" tabindex="-1"><a class="header-anchor" href="#css-语法"><span>CSS 语法</span></a></h2><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token atrule"><span class="token rule">@media</span> +（<span class="token keyword">and</span> | <span class="token keyword">not</span>  | <span class="token keyword">only</span>） + 媒体类型 +（<span class="token keyword">and</span>+ 媒体查询）</span><span class="token punctuation">{</span></span>
<span class="line">  CSS-Code<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（and+媒体查询），这个是用来限制查询条件的，例如当屏幕小于最大宽度时，@media中的class就起作用了</p><h3 id="not、only-和-and-关键字的含义" tabindex="-1"><a class="header-anchor" href="#not、only-和-and-关键字的含义"><span>not、only 和 and 关键字的含义：</span></a></h3><p>not 还原整个媒体查询。</p><p>only 关键字可防止旧版浏览器应用指定的样式，这些浏览器不支持带媒体特性的媒体查询。它对现代浏览器没有影响。</p><p>and 关键字将媒体特性与媒体类型或其他媒体特性组合在一起。</p><p>它们都是可选的。但是，如果使用 not 或 only，则还必须指定媒体类型。</p><p>@media还可以针对不同的媒体使用不同的样式表，就像这样：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line">&lt;link rel=<span class="token string">&quot;stylesheet&quot;</span> media=<span class="token string">&quot;screen and (min-width: 768px)&quot;</span> href=<span class="token string">&quot;style.css&quot;</span>&gt;</span>
<span class="line">....</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类型" tabindex="-1"><a class="header-anchor" href="#类型"><span>类型</span></a></h3><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>all</td><td>默认。用于所有媒体类型设备。</td></tr><tr><td>print</td><td>用于打印机。</td></tr><tr><td>screen</td><td>用于计算机屏幕、平板电脑、智能手机等。</td></tr><tr><td>speech</td><td>用于朗读页面的屏幕阅读器。</td></tr></tbody></table><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h3><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>any-hover</td><td>是否有任何可用的输入机制允许用户（将鼠标等）悬停在元素上？在 Media Queries Level 4 中被添加。</td></tr><tr><td>any-pointer</td><td>可用的输入机制中是否有任何指针设备，如果有，它的精度如何？在 Media Queries Level 4 中被添加。</td></tr><tr><td>aspect-ratio</td><td>视口（viewport）的宽高比。</td></tr><tr><td>color</td><td>输出设备每个像素的比特值，常见的有 8、16、32 位。如果设备不支持输出彩色，则该值为 0。</td></tr><tr><td>color-gamut</td><td>用户代理和输出设备大致程度上支持的色域。在 Media Queries Level 4 中被添加。</td></tr><tr><td>color-index</td><td>输出设备的颜色查询表（color lookup table）中的条目数量。如果设备不使用颜色查询表，则该值为 0。</td></tr><tr><td>device-aspect-ratio</td><td>输出设备的宽高比。已在 Media Queries Level 4 中被弃用。</td></tr><tr><td>device-height</td><td>输出设备渲染表面（如屏幕）的高度。已在 Media Queries Level 4 中被弃用。</td></tr><tr><td>device-width</td><td>输出设备渲染表面（如屏幕）的宽度。已在 Media Queries Level 4 中被弃用。</td></tr><tr><td>display-mode</td><td>应用程序的显示模式，如 web app 的 manifest 中的 display 成员所指定在 Web App Manifest spec 被定义。</td></tr><tr><td>forced-colors</td><td>检测是用户代理否限制调色板。在 Media Queries Level 5 中被添加。</td></tr><tr><td>grid</td><td>输出设备使用网格屏幕还是点阵屏幕？</td></tr><tr><td>height</td><td>视口（viewport）的高度。</td></tr><tr><td>hover</td><td>主输入机制是否允许用户将鼠标悬停在元素上？在 Media Queries Level 4 中被添加。</td></tr><tr><td>inverted-colors</td><td>浏览器或者底层操作系统是否反转了颜色。在 Media Queries Level 5 中被添加。</td></tr><tr><td>light-level</td><td>当前环境光水平。在 Media Queries Level 5 中被添加。</td></tr><tr><td>max-aspect-ratio</td><td>显示区域的宽度和高度之间的最大比例。</td></tr><tr><td>max-color</td><td>输出设备每个颜色分量的最大位数。</td></tr><tr><td>max-color-index</td><td>设备可以显示的最大颜色数。</td></tr><tr><td>max-height</td><td>显示区域的最大高度，例如浏览器窗口。</td></tr><tr><td>max-monochrome</td><td>单色（灰度）设备上每种“颜色”的最大位数。</td></tr><tr><td>max-resolution</td><td>设备的最大分辨率，使用 dpi 或 dpcm。</td></tr><tr><td>max-width</td><td>显示区域的最大宽度，例如浏览器窗口。</td></tr><tr><td>min-aspect-ratio</td><td>显示区域的宽度和高度之间的最小比例。</td></tr><tr><td>min-color</td><td>输出设备每个颜色分量的最小位数。</td></tr><tr><td>min-color-index</td><td>设备可以显示的最小颜色数。</td></tr><tr><td>min-height</td><td>显示区域的最小高度，例如浏览器窗口。</td></tr><tr><td>min-monochrome</td><td>单色（灰度）设备上每种“颜色”的最小位数。</td></tr><tr><td>min-resolution</td><td>设备的最低分辨率，使用 dpi 或 dpcm。</td></tr><tr><td>min-width</td><td>显示区域的最小宽度，例如浏览器窗口。</td></tr><tr><td>monochrome</td><td>输出设备单色帧缓冲区中每个像素的位深度。如果设备并非黑白屏幕，则该值为 0。</td></tr><tr><td>orientation</td><td>视窗（viewport）的旋转方向（横屏还是竖屏模式）。</td></tr><tr><td>overflow-block</td><td>输出设备如何处理沿块轴溢出视口(viewport)的内容。在 Media Queries Level 4 中被添加。</td></tr><tr><td>overflow-inline</td><td>沿内联轴溢出视口(viewport)的内容是否可以滚动？在 Media Queries Level 4 中被添加。</td></tr><tr><td>pointer</td><td>主要输入机制是一个指针设备吗？如果是，它的精度如何？在 Media Queries Level 4 中被添加。</td></tr><tr><td>prefers-color-scheme</td><td>探测用户倾向于选择亮色还是暗色的配色方案。在 Media Queries Level 5 中被添加。</td></tr><tr><td>prefers-contrast</td><td>探测用户是否有向系统要求提高或降低相近颜色之间的对比度。在 Media Queries Level 5 中被添加。</td></tr><tr><td>prefers-reduced-motion</td><td>用户是否希望页面上出现更少的动态效果。在 Media Queries Level 5 中被添加。</td></tr><tr><td>prefers-reduced-transparency</td><td>用户是否倾向于选择更低的透明度。在 Media Queries Level 5 中被添加。</td></tr><tr><td>resolution</td><td>输出设备的分辨率，使用 dpi 或 dpcm。</td></tr><tr><td>scan</td><td>输出设备的扫描过程（适用于电视等）。</td></tr><tr><td>scripting</td><td>探测脚本（例如 JavaScript）是否可用。在 Media Queries Level 5 中被添加。</td></tr><tr><td>update</td><td>输出设备更新内容的渲染结果的频率。在 Media Queries Level 4 中被添加。</td></tr><tr><td>width</td><td>视窗（viewport）的宽度。</td></tr></tbody></table>`,23)]))}const c=e(i,[["render",l],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/blogs/post-doc/2022/08/2022-08-21-css-media-guize/","title":"CSS @media 规则","lang":"en-US","frontmatter":{"title":"CSS @media 规则","date":"2022-08-21","categories":["css","web","blog"],"tags":["css","html"],"coverImage":"1661083934-CSS.jpg"},"headers":[{"level":2,"title":"实例","slug":"实例","link":"#实例","children":[]},{"level":2,"title":"定义和用法","slug":"定义和用法","link":"#定义和用法","children":[]},{"level":2,"title":"CSS 语法","slug":"css-语法","link":"#css-语法","children":[{"level":3,"title":"not、only 和 and 关键字的含义：","slug":"not、only-和-and-关键字的含义","link":"#not、only-和-and-关键字的含义","children":[]},{"level":3,"title":"类型","slug":"类型","link":"#类型","children":[]},{"level":3,"title":"特性","slug":"特性","link":"#特性","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/post-doc/2022/08/2022-08-21-css-media-规则/index.md"}');export{c as comp,u as data};
