import{_ as t,c as s,a,o as n}from"./app-BlXaiT8W.js";const l="/assets/MW6QZD68GPBAOP7G_9R-BFL8SXi5.png",i={};function d(r,e){return n(),s("div",null,e[0]||(e[0]=[a(`<h1 id="_1、连接mysql" tabindex="-1"><a class="header-anchor" href="#_1、连接mysql"><span>1、连接Mysql</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">格式： mysql -h主机地址 -u用户名 －p用户密码;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+l+`" alt="" title="命令提示符窗口"></p><p><strong>1、连接到本机上的MYSQL。</strong><br> 首先打开DOS窗口，然后进入目录mysql\\bin，再键入命令mysql -u root -p，回车后提示你输密码.注意用户名前可以有空格也可以没有空格，但是密码前必须没有空格，否则让你重新输入密码。</p><p>如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是： mysql&gt;</p><p>**2、连接到远程主机上的MYSQL。**假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：<br>     mysql -h110.110.110.110 -u root -p 123;（注:u与root之间可以不用加空格，其它也一样）</p><p><strong>3、退出MYSQL命令</strong>： exit （回车）</p><hr><h1 id="_2、修改密码" tabindex="-1"><a class="header-anchor" href="#_2、修改密码"><span>2、修改密码</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">格式：mysqladmin -u用户名 -p旧密码 password 新密码;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>1、给root加个密码ab12</strong><br> 首先在DOS下进入目录mysql\\bin，然后键入以下命令</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mysqladmin -u root -password ab12;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注：因为开始时root没有密码，所以-p旧密码一项就可以省略了</p><p><strong>2、再将root的密码改为djg345</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mysqladmin -u root -p ab12 password djg345;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>3、<strong><strong>使用set passsword命令修改密码</strong></strong></strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">set password for 用户名@localhost = password(&#39;新密码&#39;);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="_3、增加新用户" tabindex="-1"><a class="header-anchor" href="#_3、增加新用户"><span>3、增加新用户</span></a></h1><p>注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">格式：grant select on 数据库.* to 用户名@登录主机 identified by &quot;密码&quot;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。首先用root用户连入MYSQL，然后键入以下命令：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">  grant select,insert,update,delete on *.* to [email=test1@”%]test1@”%[/email]” Identified by &quot;abc&quot;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见2。</p><p><strong>2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）</strong>，这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">grant select,insert,update,delete on mydb.* to [email=test2@localhost]test2@localhost[/email] identified by &quot;abc&quot;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果你不想test2有密码，可以再打一个命令将密码消掉。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"> grant select,insert,update,delete on mydb.* to [email=test2@localhost]test2@localhost[/email] identified by &quot;&quot;; </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="_4-1-创建数据库" tabindex="-1"><a class="header-anchor" href="#_4-1-创建数据库"><span>4.1 创建数据库</span></a></h1><p>注意：创建数据库之前要先连接Mysql服务器</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：create database &lt;数据库名&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>例1：建立一个名为taoli的数据库</strong>：create database taoli;</p><h1 id="_4-2-显示数据库" tabindex="-1"><a class="header-anchor" href="#_4-2-显示数据库"><span>4.2 显示数据库</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：show databases; （注意：最后有个s）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意：为了不再显示的时候乱码，要修改数据库默认编码。以下以GBK编码页面为例进行说明：</p><p>**1、修改MYSQL的配置文件：**my.ini里面修改default-character-set=gbk<br><strong>2、代码运行时修改：</strong><br>    ①Java代码：jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=gbk<br>    ②PHP代码：header(&quot;Content-Type:text/html;charset=gb2312&quot;);<br>    ③C语言代码：int mysql_set_character_set( MYSQL * mysql, char * csname)；<br> 该函数用于为当前连接设置默认的字符集。字符串csname指定了1个有效的字符集名称。连接校对成为字符集的默认校对。该函数的工作方式与SET NAMES语句类似，但它还能设置mysql- &gt; charset的值，从而影响了由mysql_real_escape_string() 设置的字符集。</p><h1 id="_4-3-删除数据库" tabindex="-1"><a class="header-anchor" href="#_4-3-删除数据库"><span>4.3 删除数据库</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：drop database &lt;数据库名&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="_4-4-连接数据库" tabindex="-1"><a class="header-anchor" href="#_4-4-连接数据库"><span>4.4 连接数据库</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令： use &lt;数据库名&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="_4-5-当前选择的数据库" tabindex="-1"><a class="header-anchor" href="#_4-5-当前选择的数据库"><span>4.5 当前选择的数据库</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：mysql&gt; select database();</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>MySQL中SELECT命令类似于其他编程语言里的print或者write，你可以用它来显示一个字符串、数字、数学表达式的结果等等。如何使用MySQL中SELECT命令的特殊功能？</p><p><strong>1.显示MYSQL的版本</strong>： select version();</p><p><strong>2. 显示当前时间</strong>： select now();</p><p><strong>3. 显示年月日</strong>:</p><ul><li><p>SELECT DAYOFMONTH(CURRENT_DATE);</p></li><li><p>SELECT MONTH(CURRENT_DATE);</p></li><li><p>SELECT YEAR(CURRENT_DATE);</p></li></ul><p><strong>4. 显示字符串</strong>： SELECT &quot;welecome to my blog!&quot;;</p><p><strong>5. 当计算器用</strong>：select ((4 * 4) / 10 ) + 25;</p><h1 id="_5-1-创建数据表" tabindex="-1"><a class="header-anchor" href="#_5-1-创建数据表"><span>5.1 创建数据表</span></a></h1><p>命令：create table &lt;表名&gt; ( &lt;字段名1&gt; &lt;类型1&gt; [,..&lt;字段名n&gt; &lt;类型n&gt;]);</p><p>例如，建立一个名为MyClass的表，</p><table><tbody><tr><td>字段名</td><td>数字类型</td><td>数据宽度</td><td>是否为空</td><td>是否主键</td><td>自动增加</td><td>默认值</td></tr><tr><td>id</td><td>int</td><td>4</td><td>否</td><td>primary key</td><td>auto_increment</td><td> </td></tr><tr><td>name</td><td>char</td><td>20</td><td>否</td><td> </td><td> </td><td> </td></tr><tr><td>sex</td><td>int</td><td>4</td><td>否</td><td> </td><td> </td><td>0</td></tr><tr><td>degree</td><td>double</td><td>16</td><td>是</td><td> </td><td> </td><td> </td></tr></tbody></table><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mysql&gt; createtable MyClass(&gt; id int(4) not null primary key auto_increment,&gt; name char(20) not null,&gt; sex int(4) not null default &#39;0&#39;,&gt; degree double(16,2));</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="_5-3-删除数据表" tabindex="-1"><a class="header-anchor" href="#_5-3-删除数据表"><span>5.3 删除数据表</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：drop table &lt;表名&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：删除表名为 MyClass 的表<br>    mysql&gt; drop table MyClass;</p><p>DROP TABLE用于取消一个或多个表。您必须有每个表的DROP权限。所有的表数据和表定义会被取消，所以使用本语句要小心！</p><p>注意：对于一个带分区的表，DROP TABLE会永久性地取消表定义，取消各分区，并取消储存在这些分区中的所有数据。DROP TABLE还会取消与被取消的表有关联的分区定义（.par）文件。</p><h1 id="_5-4-表插入数据" tabindex="-1"><a class="header-anchor" href="#_5-4-表插入数据"><span>5.4 表插入数据</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：insert into &lt;表名&gt; [( &lt;字段名1&gt;[,..&lt;字段名n &gt; ])] values ( 值1 )[, ( 值n )];</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：往表 MyClass中插入二条记录, 这二条记录表示：编号为1的名为Tom的成绩为96.45, 编号为2 的名为Joan 的成绩为82.99， 编号为3 的名为Wang 的成绩为96.5。<br>    mysql&gt; insert into MyClass values(1,&#39;Tom&#39;,96.45),(2,&#39;Joan&#39;,82.99), (2,&#39;Wang&#39;, 96.59);</p><p>注意：insert into每次只能向表中插入一条记录。</p><h1 id="_5-5-查询表中的数据" tabindex="-1"><a class="header-anchor" href="#_5-5-查询表中的数据"><span>5.5 查询表中的数据</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1)、查询所有行</span>
<span class="line">命令： select &lt;字段1，字段2，...&gt; from &lt; 表名 &gt; where &lt; 表达式 &gt;;</span>
<span class="line">例如：查看表 MyClass 中所有数据</span>
<span class="line">   mysql&gt; select * from MyClass;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2）、查询前几行数据</span>
<span class="line">例如：查看表 MyClass 中前2行数据</span>
<span class="line">mysql&gt; select * from MyClass order by id limit 0,2;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_5-6-删除表中数据" tabindex="-1"><a class="header-anchor" href="#_5-6-删除表中数据"><span>5.6 删除表中数据</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"> 命令：delete from 表名 where 表达式;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：删除表 MyClass中编号为1 的记录<br> mysql&gt; delete from MyClass where id=1;</p><p>下面是一个删除数据前后表的对比。</p><table><thead><tr><th>FirstName</th><th>LastName</th><th>Age</th></tr></thead><tbody><tr><td>Peter</td><td>Griffin</td><td>35</td></tr><tr><td>Glenn</td><td>Quagmire</td><td>33</td></tr></tbody></table><p>下面以PHP代码为例删除 &quot;Persons&quot; 表中所有 LastName=&#39;Griffin&#39; 的记录：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;?php </span>
<span class="line">   $con = mysql_connect(&quot;localhost&quot;,&quot;peter&quot;,&quot;abc123&quot;); </span>
<span class="line">   if (!$con) </span>
<span class="line">   {</span>
<span class="line">      die(&#39;Could not connect: &#39; . mysql_error()); </span>
<span class="line">   } </span>
<span class="line">   mysql_select_db(&quot;my_db&quot;, $con); </span>
<span class="line">   mysql_query(&quot;DELETE FROM Persons WHERE LastName=&#39;Griffin&#39;&quot;); mysql_close($con); </span>
<span class="line">?&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这次删除之后，表是这样的：</p><table><thead><tr><th>FirstName</th><th>LastName</th><th>Age</th></tr></thead><tbody><tr><td>Glenn</td><td>Quagmire</td><td>33</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h1 id="_5-7-修改表中数据" tabindex="-1"><a class="header-anchor" href="#_5-7-修改表中数据"><span>5.7 修改表中数据</span></a></h1><p>语法：update 表名 set 字段=新值,… where 条件<br>    mysql&gt; update MyClass set name=&#39;Mary&#39; where id=1;</p><p><strong>例子1：单表的MySQL UPDATE语句：</strong><br>    UPDATE [LOW_PRIORITY] [IGNORE] tbl_name SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition] [ORDER BY ...] [LIMIT row_count]</p><p><strong>例子2：多表的UPDATE语句：</strong><br> UPDATE [LOW_PRIORITY] [IGNORE] table_references SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition]</p><p>UPDATE语法可以用新值更新原有表行中的各列。SET子句指示要修改哪些列和要给予哪些值。WHERE子句指定应更新哪些行。如果没有WHERE子句，则更新所有的行。如果指定了ORDER BY子句，则按照被指定的顺序对行进行更新。LIMIT子句用于给定一个限值，限制可以被更新的行的数目。</p><h1 id="_5-8-增加字段" tabindex="-1"><a class="header-anchor" href="#_5-8-增加字段"><span>5.8 增加字段</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：alter table 表名 add字段 类型 其他;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：在表MyClass中添加了一个字段passtest，类型为int(4)，默认值为0<br>    mysql&gt; <strong>alter table</strong> MyClass <strong>add</strong> passtest <strong>int(<strong>4</strong>) default</strong> &#39;0&#39;</p><p><strong>加索引</strong><br>    mysql&gt; alter table 表名 add index 索引名 (字段名1[，字段名2 …]);<br> 例子： mysql&gt; alter table employee add index emp_name (name);</p><p><strong>加主关键字的索引</strong><br>   mysql&gt; alter table 表名 add primary key (字段名);<br> 例子： mysql&gt; alter table employee add primary key(id);</p><p><strong>加唯一限制条件的索引</strong><br>    mysql&gt; alter table 表名 add unique 索引名 (字段名);<br> 例子： mysql&gt; alter table employee add unique emp_name2(cardnumber);</p><p><strong>删除某个索引</strong><br>    mysql&gt; alter table 表名 drop index 索引名;<br> 例子： mysql&gt;alter table employee drop index emp_name;</p><p><strong>增加字段：</strong><br> mysql&gt; ALTER TABLE table_name ADD field_name field_type;</p><p><strong>修改原字段名称及类型：</strong><br> mysql&gt; ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;</p><p><strong>删除字段：</strong><br> MySQL ALTER TABLE table_name DROP field_name;</p><h1 id="_5-9-修改表名" tabindex="-1"><a class="header-anchor" href="#_5-9-修改表名"><span>5.9 修改表名</span></a></h1><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">命令：rename table 原表名 to 新表名;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：在表MyClass名字更改为YouClass<br>    mysql&gt; rename table MyClass to YouClass;</p><p>当你执行 RENAME 时，你不能有任何锁定的表或活动的事务。你同样也必须有对原初表的 ALTER 和 DROP 权限，以及对新表的 CREATE 和 INSERT 权限。</p><p>如果在多表更名中，MySQL 遭遇到任何错误，它将对所有被更名的表进行倒退更名，将每件事物退回到最初状态。</p><p>RENAME TABLE 在 MySQL 3.23.23 中被加入。</p>`,96)]))}const o=t(i,[["render",d],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/blogs/post-doc/2020/05/2020-05-18-mysqlchangyongmingling/","title":"mysql常用命令","lang":"en-US","frontmatter":{"title":"mysql常用命令","date":"2020-05-18","categories":["mysql","blog"],"tags":["mysql","mysql命令","mysql基础"]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/post-doc/2020/05/2020-05-18-mysql常用命令/index.md"}');export{o as comp,c as data};
