import{_ as s,c as n,a,o as t}from"./app-Cw2o-BxM.js";const i="/taoliblogs/assets/image-Cv8582pD.png",l={};function r(p,e){return t(),n("div",null,e[0]||(e[0]=[a(`<p>数组对于每一门编程语言来说都是重要的数据结构之一，当然不同语言对数组的实现及处理也不尽相同。</p><p>Java 语言中提供的数组是用来存储固定大小的同类型元素。</p><p>你可以声明一个数组变量，如 numbers[100] 来代替直接声明 100 个独立变量 number0，number1，....，number99。</p><p>本教程将为大家介绍 Java 数组的声明、创建和初始化，并给出其对应的代码。</p><p><strong>获取数组长度：数组名.length</strong></p><p><strong>一维数组介绍：</strong></p><p><img src="https://oss.ataoli.cn/uploads/2020/05/Screenshot_20200506-155038.jpg?x-oss-process=image/resize,m_fill,h_533,w_1024" alt=""></p><p><strong>一维数组声明：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">数组元素类型    数组名[];           数组元素类型      []数组名;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>实例：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">String    Demo[];                     String []Demo;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="一维数组的初始化" tabindex="-1"><a class="header-anchor" href="#一维数组的初始化"><span>一维数组的初始化</span></a></h3><p><strong>动态初始化：</strong></p><ul><li>数据类型[] 数组名称;</li><li>数组名称 = new 数据类型[长度];</li><li>数据类型[] 数组名称 = new 数据类型[长度];</li><li>数据类型 数组名称[] = new 数据类型[长度];</li></ul><p><strong>实例：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">String[]  Demo;</span>
<span class="line">Demo = new int[10];</span>
<span class="line">int[]  Demo = new int[10];</span>
<span class="line">int  Demo[] = new int[10];</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>静态初始化：</strong></p><p>数组元素类型 数组名[] = {值1，值2，值3};</p><p>注意：不必选给出数组大小</p><p><strong>实例：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">int   Demo[]  =  {1,2,3,4,9};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>一维数组应用实例：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">public class Demo{public static void main(String []args){int a[] = {5,6,7,9,10};for(int i = 0;i &lt; a.length;i++){System.out.println(a[i]);}}}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>运行结果：</strong></p><p><img src="`+i+'" alt=""></p>',25)]))}const o=s(l,[["render",r],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/blogs/post-doc/2020/05/2020-05-06-javashuzu/","title":"java一维数组","lang":"en-US","frontmatter":{"title":"java一维数组","date":"2020-05-06","categories":["java","blog"],"tags":["java","java基础","java学习","java学习框架"],"coverImage":"yiwei.png"},"headers":[{"level":3,"title":"一维数组的初始化","slug":"一维数组的初始化","link":"#一维数组的初始化","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/post-doc/2020/05/2020-05-06-java数组/index.md"}');export{o as comp,c as data};
