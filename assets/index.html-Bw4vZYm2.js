import{_ as n,c as a,a as i,o as l}from"./app-BDGVfunK.js";const s="/taoliblogs/assets/E1G0SI13T5URHXX83E-lhNzTQX_.png",t={};function r(d,e){return l(),a("div",null,e[0]||(e[0]=[i(`<h4 id="引言" tabindex="-1"><a class="header-anchor" href="#引言"><span><strong>引言：</strong></span></a></h4><p>上一次我们讲了java的一维数组，今天我们来讲<strong>java的二维数组</strong>。</p><h3 id="正文" tabindex="-1"><a class="header-anchor" href="#正文"><span><strong>正文：</strong></span></a></h3><h4 id="二维数组的声明" tabindex="-1"><a class="header-anchor" href="#二维数组的声明"><span>二维数组的声明：</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">格式一：数组元素类型   数组名[][];</span>
<span class="line">int arr[][];</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">格式二：数组元素类型[][] 数组名;</span>
<span class="line">int[][] arr;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注</strong>：元素类型可以是java的基本数据类型，也可以是类或者接口。</p><h3 id="二维数组的初始化" tabindex="-1"><a class="header-anchor" href="#二维数组的初始化"><span>二维数组的初始化：</span></a></h3><p><strong>1.使用new操作符初始化（动态初始化）：</strong></p><p><img src="https://oss.ataoli.cn/uploads/2020/05/Screenshot_20200509-182014.jpg?x-oss-process=image/resize,m_fill,h_583,w_1024" alt=""></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">例： int arr[][] = new int[2][3];</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>2.直接初始化（静态初始化）：</strong></p><p><img src="https://oss.ataoli.cn/uploads/2020/05/Screenshot_20200509-182009.jpg?x-oss-process=image/resize,m_fill,h_615,w_1024" alt=""></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">例：int[][]   arr = {{3,-9,6},{8,0,1},{11,9,8}};</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="二维数组的引用" tabindex="-1"><a class="header-anchor" href="#二维数组的引用"><span>二维数组的引用：</span></a></h3><ol><li><strong>获取数组的行数 ：数组名.length</strong></li><li><strong>获取数组的列数：数组名[行标].length</strong></li></ol><h3 id="二维数组的使用" tabindex="-1"><a class="header-anchor" href="#二维数组的使用"><span>二维数组的使用：</span></a></h3><p><strong>动态初始化实例：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">public class Demo{</span>
<span class="line">public static void main(String[]args){</span>
<span class="line">int [][] arr=new int[][]{{4,5,6,8},{2,3},{1,6,9}};</span>
<span class="line">System.out.println(arr.length);  //输出行数 </span>
<span class="line">System.out.println(arr[0].length);  //输出列数</span>
<span class="line">}</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>运行结果：</strong></p><p><img src="`+s+`" alt=""></p><p><strong>静态初始化实例：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">public class Demo{</span>
<span class="line">public static void main(String[]args){</span>
<span class="line">int [][] arr={{4,5,6,8},{2,3},{1,6,9}};</span>
<span class="line">System.out.println(arr.length);  //输出行数 </span>
<span class="line">System.out.println(arr[0].length);  //输出列数</span>
<span class="line">}</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+s+'" alt=""></p>',24)]))}const c=n(t,[["render",r],["__file","index.html.vue"]]),o=JSON.parse('{"path":"/blogs/post-doc/2020/05/2020-05-09-javashuzu-2/","title":"java二维数组","lang":"en-US","frontmatter":{"title":"java二维数组","date":"2020-05-09","categories":["java","blog"],"tags":["java","java基础","java学习","java学习框架"],"coverImage":"erwei.png"},"headers":[{"level":3,"title":"正文：","slug":"正文","link":"#正文","children":[]},{"level":3,"title":"二维数组的初始化：","slug":"二维数组的初始化","link":"#二维数组的初始化","children":[]},{"level":3,"title":"二维数组的引用：","slug":"二维数组的引用","link":"#二维数组的引用","children":[]},{"level":3,"title":"二维数组的使用：","slug":"二维数组的使用","link":"#二维数组的使用","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/post-doc/2020/05/2020-05-09-java数组-2/index.md"}');export{c as comp,o as data};
