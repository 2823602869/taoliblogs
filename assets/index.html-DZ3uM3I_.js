import{_ as e,c as n,a,o as i}from"./app-D0tMrQXM.js";const l="/taoliblogs/assets/Java-C8-vTQqf.png",r={};function t(d,s){return i(),n("div",null,s[0]||(s[0]=[a('<blockquote><p>前言<br> 最近也是到了大学时光的最后一年，现在博主正在写自己的毕业设计，在做毕业设计的时候也是用到了许多以前的Java基础知识，刚好用到了JDBC，现在回顾一下，做一篇关于JDBC的总结</p></blockquote><h2 id="一、jdbc概述" tabindex="-1"><a class="header-anchor" href="#一、jdbc概述"><span>一、JDBC概述</span></a></h2><blockquote><p>Java数据库连接，（Java Database Connectivity，简称JDBC）是Java语言中用来规范客户端程序如何来访问数据库的应用程序接口，提&gt; 供了诸如查询和更新数据库中数据的方法</p></blockquote><h5 id="数据库驱动" tabindex="-1"><a class="header-anchor" href="#数据库驱动"><span>数据库驱动</span></a></h5><p>我们安装好数据库之后，我们的应用程序也是不能直接使用数据库的，必须要通过相应的数据库驱动程序，通过驱动程序去和数据库打交道。其实也就是数据库厂商的JDBC接口实现，即对Connection等接口的实现类的jar文件<br><img src="'+l+`" alt="image"></p><h2 id="二、常用接口" tabindex="-1"><a class="header-anchor" href="#二、常用接口"><span>二、常用接口</span></a></h2><ol><li>Driver接口<br> Driver接口由数据库厂家提供，作为java开发人员，只需要使用Driver接口就可以了。在编程中要连接数据库，必须先装载特定厂商的数据库驱动程序，不同的数据库有不同的装载方法。如：<br> 装载MySql驱动：</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Connection接口<br> Connection与特定数据库的连接（会话），在连接上下文中执行sql语句并返回结果</li></ol><p>// 获得数据连接 <code>DriverManager.getConnection(url, user, password)</code></p><p>方法建立在JDBC URL中定义的数据库Connection连接上。<br><strong>连接MySql数据库：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Connection conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/database&quot;, &quot;user&quot;, &quot;password&quot;);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="二、-jdbc所需要的4个参数-user-password-url-driverclass" tabindex="-1"><a class="header-anchor" href="#二、-jdbc所需要的4个参数-user-password-url-driverclass"><span>二、 JDBC所需要的4个参数（user，password，URL，driverClass）</span></a></h2><p>（1）user用户名</p><p>（2）password密码</p><p>（3）URL定义了连接数据库时的协议、子协议、数据源标识，它们之间用冒号隔开。<br> 书写形式： 协议：子协议：数据源标识</p><blockquote><p>协议：在JDBC中总是以jdbc开始子<br> 协议：是桥连接的驱动程序或是数据库管理系统名称。<br> 数据源标识：标记找到数据库来源的地址与连接端口</p></blockquote><p>（4）driverClass连接数据库所需的驱动</p><h2 id="三、jdbc使用实例" tabindex="-1"><a class="header-anchor" href="#三、jdbc使用实例"><span>三、JDBC使用实例</span></a></h2><ol><li>使用DriverManager连接</li></ol><div class="language-Java line-numbers-mode" data-highlighter="prismjs" data-ext="Java" data-title="Java"><pre><code><span class="line"></span>
<span class="line">public class connectFour{</span>
<span class="line">    public static void main(){</span>
<span class="line">        String url=&quot;jdbc:mysql://localhost:3306/test&quot;;</span>
<span class="line">        String user=&quot;root&quot;;</span>
<span class="line">        String password=&quot;password&quot;;</span>
<span class="line">        String driverName=&quot;com.mysql.jdbc.Driver&quot;;</span>
<span class="line">        //加载驱动</span>
<span class="line">        Class.forName(driverName);</span>
<span class="line">        //建立连接</span>
<span class="line">        Connection conn =DriverManager.getConnection(url,user,password);    </span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用配置文件（jdbc.properties）连接</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">jdbc.driver=com.mysql.jdbc.driver</span>
<span class="line">jdbc.url=jdbc:mysql://localhost:3306/数据库名</span>
<span class="line">jdbc.user=root</span>
<span class="line">jdbc.password=123456</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">public class connectFive{</span>
<span class="line">    public static void main(){</span>
<span class="line">        //加载配置文件</span>
<span class="line">InputStream is=connectFive.getClassLoader().getResourceAsStream(&quot;jdbc.properties&quot;)</span>
<span class="line">        Properties pros=new Properties();</span>
<span class="line">        pros.load(is);</span>
<span class="line">        //读取配置信息</span>
<span class="line">        String user = ppros,getProperty(&quot;user&quot;);</span>
<span class="line">        String pass=pros.getProperty(&quot;password&quot;);</span>
<span class="line">   String url=pros.getProperty(&quot;url&quot;);</span>
<span class="line">   String driver=pros.getProperty(&quot;driverClass&quot;);</span>
<span class="line">        //加载驱动</span>
<span class="line">        Class.forName(driver);</span>
<span class="line">        //获取链接</span>
<span class="line">        Connection conn=DriverManager.getConnection(url,user,password); </span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24)]))}const o=e(r,[["render",t],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/blogs/post-doc/2021/11/2021-11-08-java-jdbc/","title":"Java JDBC","lang":"en-US","frontmatter":{"title":"Java JDBC","date":"2021-11-08","categories":["java","blog"],"tags":["java","java基础","java学习"],"coverImage":"jdbc.jpg"},"headers":[{"level":2,"title":"一、JDBC概述","slug":"一、jdbc概述","link":"#一、jdbc概述","children":[]},{"level":2,"title":"二、常用接口","slug":"二、常用接口","link":"#二、常用接口","children":[]},{"level":2,"title":"二、 JDBC所需要的4个参数（user，password，URL，driverClass）","slug":"二、-jdbc所需要的4个参数-user-password-url-driverclass","link":"#二、-jdbc所需要的4个参数-user-password-url-driverclass","children":[]},{"level":2,"title":"三、JDBC使用实例","slug":"三、jdbc使用实例","link":"#三、jdbc使用实例","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/post-doc/2021/11/2021-11-08-java-jdbc/index.md"}');export{o as comp,p as data};
